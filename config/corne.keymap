/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Default";
                        bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
// | TAB      | Q        | W        | E        | R        | T        | | Y        | U        | I        | O        | P        | ESC      |
    &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O      &kp P      &kp ESC
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | CTRL     | A        | S        | D        | F        | G        | | H        | J        | K        | L        | ;        | ENT      |
    &kp LCTRL  &kp A      &kp S      &kp D      &kp F      &kp G        &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp RET
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | SHFT     | Z        | X        | C        | V        | B        | | N        | M        | ,        | .        | /        | ALT      |
    &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp LALT
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
//                                  | GUI      | LWR      | BSPC     | | SPC      | RSE      | HYPER    |
                                     &kp LGUI   &mo 1      &kp BSPC     &kp SPACE  &mo 2      &kp LC(LA(LS(LGUI)))
//                                  ╰──────────┴──────────┴──────────╯ ╰──────────┴──────────┴──────────╯
                        >;
                };
                lower_layer {
                        display-name = "Lower L";
                        bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
// | TAB      | 1        | 2        | 3        | 4        | 5        | | 6        | 7        | 8        | 9        | 0        | ESC      |
    &kp TAB    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5       &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp ESC
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | CTRL     | BT1      | BT2      | BT3      | BT4      | BT5      | | LFT      | DWN      |  UP      | RGT      |          | ENT      |
    &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans    &kp RET
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | SHFT     | BTCLR    |          |          |          |          | |          |          |          |          |          | ALT      |
    &kp LSHFT  &bt BT_CLR &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans     &kp LALT
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
//                                  | GUI      |          | BSPC     | | SPC      |          | HYPER    |
                                     &kp LGUI   &trans     &kp BSPC     &kp SPACE  &trans     &kp LC(LA(LS(LGUI)))
//                                  ╰──────────┴──────────┴──────────╯ ╰──────────┴──────────┴──────────╯
                        >;
                };

                raise_layer {
                        display-name = "Raise L";
                        bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
// | TAB      | !        | @        | #        | $        | %        | | ^        | &        | *        | (        | )        | ESC      |
    &kp  TAB   &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR   &kp ESC
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | CTRL     |          |          |          |          | '        | | -        | =        | [        | ]        | \        | `        |
    &kp LCTRL  &trans     &trans     &trans     &trans     &kp SQT      &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH   &kp GRAVE
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// | SHFT     |          |          |          |          | "        | | _        | +        | {        | }        |"|"       | ~        |
    &kp LSHFT  &trans     &trans     &trans     &trans     &kp DQT      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE   &kp TILDE
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
//                                  | GUI      |          | BSPC|    | |SPC       |          | HYPER    |
                                     &kp LGUI   &trans     &kp BSPC     &kp SPACE  &trans     &kp LC(LA(LS(LGUI)))
//                                  ╰──────────┴──────────┴──────────╯ ╰──────────┴──────────┴──────────╯
                        >;
                };
        };
};
